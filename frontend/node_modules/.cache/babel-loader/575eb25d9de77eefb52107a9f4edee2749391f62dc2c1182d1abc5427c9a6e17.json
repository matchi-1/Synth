{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\nfunction remove(event) {\n  event.remove();\n}\nvar LocalEventTrapMixin = {\n  trapBubbledEvent: function (topLevelType, handlerBaseName) {\n    \"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted());\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    \"production\" !== process.env.NODE_ENV ? invariant(node, 'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.') : invariant(node);\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(topLevelType, handlerBaseName, node);\n    this._localEventListeners = accumulateInto(this._localEventListeners, listener);\n  },\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount: function () {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\nmodule.exports = LocalEventTrapMixin;","map":{"version":3,"names":["ReactBrowserEventEmitter","require","accumulateInto","forEachAccumulated","invariant","remove","event","LocalEventTrapMixin","trapBubbledEvent","topLevelType","handlerBaseName","process","env","NODE_ENV","isMounted","node","getDOMNode","listener","_localEventListeners","componentWillUnmount","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/LocalEventTrapMixin.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAEpE,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAa,CAAC;AAEtC,SAASI,MAAMA,CAACC,KAAK,EAAE;EACrBA,KAAK,CAACD,MAAM,CAAC,CAAC;AAChB;AAEA,IAAIE,mBAAmB,GAAG;EACxBC,gBAAgB,EAAC,SAAAA,CAASC,YAAY,EAAEC,eAAe,EAAE;IACtD,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGT,SAAS,CAAC,IAAI,CAACU,SAAS,CAAC,CAAC,EAAE,gCAAgC,CAAC,GAAGV,SAAS,CAAC,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC;IACpI;IACA;IACA,IAAIC,IAAI,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAC3B,YAAY,KAAKL,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGT,SAAS,CAChDW,IAAI,EACJ,0EACF,CAAC,GAAGX,SAAS,CAACW,IAAI,CAAC;IACnB,IAAIE,QAAQ,GAAGjB,wBAAwB,CAACQ,gBAAgB,CACtDC,YAAY,EACZC,eAAe,EACfK,IACF,CAAC;IACD,IAAI,CAACG,oBAAoB,GACvBhB,cAAc,CAAC,IAAI,CAACgB,oBAAoB,EAAED,QAAQ,CAAC;EACvD,CAAC;EAED;EACA;;EAEAE,oBAAoB,EAAC,SAAAA,CAAA,EAAW;IAC9B,IAAI,IAAI,CAACD,oBAAoB,EAAE;MAC7Bf,kBAAkB,CAAC,IAAI,CAACe,oBAAoB,EAAEb,MAAM,CAAC;IACvD;EACF;AACF,CAAC;AAEDe,MAAM,CAACC,OAAO,GAAGd,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
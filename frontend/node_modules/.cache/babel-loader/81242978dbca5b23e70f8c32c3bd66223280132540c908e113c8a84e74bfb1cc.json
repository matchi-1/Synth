{"ast":null,"code":"/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async promises => {\n  const results = await Promise.allSettled(promises);\n  const rejected = results.filter(result => result.status === 'rejected');\n  if (rejected.length) {\n    for (const result of rejected) {\n      console.error(result.reason);\n    }\n    throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n  }\n  // Note: TS was complaining about using `.filter().map()` here for some reason\n  const values = [];\n  for (const result of results) {\n    if (result.status === 'fulfilled') {\n      values.push(result.value);\n    }\n  }\n  return values;\n};\n//# sourceMappingURL=Util.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
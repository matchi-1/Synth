{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return nextType === 'string' || nextType === 'number';\n    } else {\n      if (nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null && prevElement._owner.getPublicInstance() != null && prevElement._owner.getPublicInstance().constructor != null) {\n              prevName = prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null && nextElement._owner.getPublicInstance() != null && nextElement._owner.getPublicInstance().constructor != null) {\n              nextName = nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null && nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' || nextElement.type === 'input' || nextElement.type === 'textarea') {\n              if (prevElement._owner != null && prevElement._owner._isOwnerNecessary === false || nextElement._owner != null && nextElement._owner._isOwnerNecessary === false) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                \"production\" !== process.env.NODE_ENV ? warning(false, '<%s /> is being rendered by both %s and %s using the same ' + 'key (%s) in the same place. Currently, this means that ' + 'they don\\'t preserve state. This behavior should be very ' + 'rare so we\\'re considering deprecating it. Please contact ' + 'the React team and explain your use case so that we can ' + 'take that into consideration.', nextDisplayName || 'Unknown Component', prevName || '[Unknown]', nextName || '[Unknown]', prevElement.key) : null;\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\nmodule.exports = shouldUpdateReactComponent;","map":{"version":3,"names":["warning","require","shouldUpdateReactComponent","prevElement","nextElement","prevType","nextType","type","key","ownersMatch","_owner","prevName","nextName","nextDisplayName","process","env","NODE_ENV","getPublicInstance","constructor","displayName","_isOwnerNecessary","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/shouldUpdateReactComponent.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
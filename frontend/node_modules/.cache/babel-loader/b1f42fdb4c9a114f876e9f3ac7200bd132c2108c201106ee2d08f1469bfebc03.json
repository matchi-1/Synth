{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\nassign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\nmodule.exports = SyntheticEvent;","map":{"version":3,"names":["PooledClass","require","assign","emptyFunction","getEventTarget","EventInterface","type","target","currentTarget","thatReturnsNull","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","defaultPrevented","isTrusted","SyntheticEvent","dispatchConfig","dispatchMarker","nativeEvent","Interface","constructor","propName","hasOwnProperty","normalize","returnValue","isDefaultPrevented","thatReturnsTrue","thatReturnsFalse","isPropagationStopped","prototype","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","destructor","augmentClass","Class","Super","Object","create","addPoolingTo","threeArgumentPooler","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/SyntheticEvent.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport * as BatchesAPI from \"./batches.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n  /**\n   * Creates and executes a batch from an uploaded file of requests\n   */\n  create(body, options) {\n    return this._client.post('/batches', {\n      body,\n      ...options\n    });\n  }\n  /**\n   * Retrieves a batch.\n   */\n  retrieve(batchId, options) {\n    return this._client.get(`/batches/${batchId}`, options);\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/batches', BatchesPage, {\n      query,\n      ...options\n    });\n  }\n  /**\n   * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n   * 10 minutes, before changing to `cancelled`, where it will have partial results\n   * (if any) available in the output file.\n   */\n  cancel(batchId, options) {\n    return this._client.post(`/batches/${batchId}/cancel`, options);\n  }\n}\nexport class BatchesPage extends CursorPage {}\n(function (Batches) {\n  Batches.BatchesPage = BatchesAPI.BatchesPage;\n})(Batches || (Batches = {}));\n//# sourceMappingURL=batches.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
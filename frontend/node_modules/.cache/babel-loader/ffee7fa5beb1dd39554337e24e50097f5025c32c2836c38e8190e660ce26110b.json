{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(keyUnique, 'ReactChildren.map(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : null;\n  }\n  if (keyUnique) {\n    var mappedChild = mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\nmodule.exports = ReactChildren;","map":{"version":3,"names":["PooledClass","require","ReactFragment","traverseAllChildren","warning","twoArgumentPooler","threeArgumentPooler","ForEachBookKeeping","forEachFunction","forEachContext","addPoolingTo","forEachSingleChild","traverseContext","child","name","i","forEachBookKeeping","call","forEachChildren","children","forEachFunc","getPooled","release","MapBookKeeping","mapResult","mapFunction","mapContext","mapSingleChildIntoContext","mapBookKeeping","keyUnique","hasOwnProperty","process","env","NODE_ENV","mappedChild","mapChildren","func","context","create","forEachSingleChildDummy","countChildren","ReactChildren","forEach","map","count","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactChildren.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? invariant(InjectedMount && InjectedMount.getNode, 'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 'is missing getNode.') : invariant(InjectedMount && InjectedMount.getNode);\n    }\n  }\n};\nvar topLevelTypes = EventConstants.topLevelTypes;\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n    \"production\" !== process.env.NODE_ENV ? invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen);\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  \"production\" !== process.env.NODE_ENV ? invariant(!Array.isArray(dispatchListener), 'executeDirectDispatch(...): Invalid `event`.') : invariant(!Array.isArray(dispatchListener));\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\nmodule.exports = EventPluginUtils;","map":{"version":3,"names":["EventConstants","require","invariant","injection","Mount","injectMount","InjectedMount","process","env","NODE_ENV","getNode","topLevelTypes","isEndish","topLevelType","topMouseUp","topTouchEnd","topTouchCancel","isMoveish","topMouseMove","topTouchMove","isStartish","topMouseDown","topTouchStart","validateEventDispatches","event","dispatchListeners","_dispatchListeners","dispatchIDs","_dispatchIDs","listenersIsArr","Array","isArray","idsIsArr","IDsLen","length","listenersLen","forEachEventDispatch","cb","i","isPropagationStopped","executeDispatch","listener","domID","currentTarget","returnValue","executeDispatchesInOrder","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchID","res","hasDispatches","EventPluginUtils","useTouchEvents","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/EventPluginUtils.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
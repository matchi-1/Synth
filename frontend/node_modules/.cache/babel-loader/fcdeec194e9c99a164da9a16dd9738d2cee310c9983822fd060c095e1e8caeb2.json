{"ast":null,"code":"import { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runFunctions'\n      }\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n  static runTools(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runTools'\n      }\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n  _addMessage(message) {\n    super._addMessage(message);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
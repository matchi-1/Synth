{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function (wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  \"production\" !== process.env.NODE_ENV ? invariant(genericComponentClass, 'There is no registered component for the tag %s', element.type) : invariant(genericComponentClass);\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\nmodule.exports = ReactNativeComponent;","map":{"version":3,"names":["assign","require","invariant","autoGenerateWrapperClass","genericComponentClass","tagToComponentClass","textComponentClass","ReactNativeComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","injectComponentClasses","componentClasses","injectAutoWrapper","wrapperFactory","getComponentClassForElement","element","type","tag","createInternalComponent","process","env","NODE_ENV","props","createInstanceForText","text","isTextComponent","component","ReactNativeComponent","injection","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactNativeComponent.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIE,wBAAwB,GAAG,IAAI;AACnC,IAAIC,qBAAqB,GAAG,IAAI;AAChC;AACA,IAAIC,mBAAmB,GAAG,CAAC,CAAC;AAC5B,IAAIC,kBAAkB,GAAG,IAAI;AAE7B,IAAIC,6BAA6B,GAAG;EAClC;EACA;EACAC,2BAA2B,EAAE,SAAAA,CAASC,cAAc,EAAE;IACpDL,qBAAqB,GAAGK,cAAc;EACxC,CAAC;EACD;EACA;EACAC,wBAAwB,EAAE,SAAAA,CAASD,cAAc,EAAE;IACjDH,kBAAkB,GAAGG,cAAc;EACrC,CAAC;EACD;EACA;EACAE,sBAAsB,EAAE,SAAAA,CAASC,gBAAgB,EAAE;IACjDZ,MAAM,CAACK,mBAAmB,EAAEO,gBAAgB,CAAC;EAC/C,CAAC;EACD;EACA;EACAC,iBAAiB,EAAE,SAAAA,CAASC,cAAc,EAAE;IAC1CX,wBAAwB,GAAGW,cAAc;EAC3C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2BA,CAACC,OAAO,EAAE;EAC5C,IAAI,OAAOA,OAAO,CAACC,IAAI,KAAK,UAAU,EAAE;IACtC,OAAOD,OAAO,CAACC,IAAI;EACrB;EACA,IAAIC,GAAG,GAAGF,OAAO,CAACC,IAAI;EACtB,IAAIR,cAAc,GAAGJ,mBAAmB,CAACa,GAAG,CAAC;EAC7C,IAAIT,cAAc,IAAI,IAAI,EAAE;IAC1BJ,mBAAmB,CAACa,GAAG,CAAC,GAAGT,cAAc,GAAGN,wBAAwB,CAACe,GAAG,CAAC;EAC3E;EACA,OAAOT,cAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,uBAAuBA,CAACH,OAAO,EAAE;EACvC,YAAY,KAAKI,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGpB,SAAS,CAChDE,qBAAqB,EACrB,iDAAiD,EACjDY,OAAO,CAACC,IACV,CAAC,GAAGf,SAAS,CAACE,qBAAqB,CAAC;EACpC,OAAO,IAAIA,qBAAqB,CAACY,OAAO,CAACC,IAAI,EAAED,OAAO,CAACO,KAAK,CAAC;AAC/D;;AAEA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,IAAI,EAAE;EACnC,OAAO,IAAInB,kBAAkB,CAACmB,IAAI,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,SAAS,EAAE;EAClC,OAAOA,SAAS,YAAYrB,kBAAkB;AAChD;AAEA,IAAIsB,oBAAoB,GAAG;EACzBb,2BAA2B,EAAEA,2BAA2B;EACxDI,uBAAuB,EAAEA,uBAAuB;EAChDK,qBAAqB,EAAEA,qBAAqB;EAC5CE,eAAe,EAAEA,eAAe;EAChCG,SAAS,EAAEtB;AACb,CAAC;AAEDuB,MAAM,CAACC,OAAO,GAAGH,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
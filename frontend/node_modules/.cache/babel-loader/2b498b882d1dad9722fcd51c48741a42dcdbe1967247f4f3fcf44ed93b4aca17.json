{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\nfunction shouldIgnoreValue(name, value) {\n  return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasNumericValue[name] && isNaN(value) || DOMProperty.hasPositiveNumericValue[name] && value < 1 || DOMProperty.hasOverloadedBooleanValue[name] && value === false;\n}\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n  var warnUnknownProperty = function (name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    \"production\" !== process.env.NODE_ENV ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : null;\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] || DOMProperty.hasOverloadedBooleanValue[name] && value === true) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] || '' + node[propName] !== '' + value) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n        if (!DOMProperty.hasSideEffects[name] || '' + node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n};\nmodule.exports = DOMPropertyOperations;","map":{"version":3,"names":["DOMProperty","require","quoteAttributeValueForBrowser","warning","shouldIgnoreValue","name","value","hasBooleanValue","hasNumericValue","isNaN","hasPositiveNumericValue","hasOverloadedBooleanValue","process","env","NODE_ENV","reactProps","children","dangerouslySetInnerHTML","key","ref","warnedProperties","warnUnknownProperty","hasOwnProperty","lowerCasedName","toLowerCase","standardName","isCustomAttribute","getPossibleStandardName","DOMPropertyOperations","createMarkupForID","id","ID_ATTRIBUTE_NAME","createMarkupForProperty","isStandardName","attributeName","getAttributeName","setValueForProperty","node","mutationMethod","getMutationMethod","deleteValueForProperty","mustUseAttribute","setAttribute","propName","getPropertyName","hasSideEffects","removeAttribute","undefined","defaultValue","getDefaultValueForProperty","nodeName","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/DOMPropertyOperations.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
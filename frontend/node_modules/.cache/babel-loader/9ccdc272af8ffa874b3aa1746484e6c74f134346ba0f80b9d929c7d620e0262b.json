{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { PuppeteerURL, evaluationString } from '../common/util.js';\nimport { assert } from '../util/assert.js';\n/**\n * @internal\n */\nexport function createEvaluationError(details) {\n  let name;\n  let message;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if ((details.exception.type !== 'object' || details.exception.subtype !== 'error') && !details.exception.objectId) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const messageHeight = message.split('\\n').length;\n  const error = new Error(message);\n  error.name = name;\n  const stackLines = error.stack.split('\\n');\n  const messageLines = stackLines.splice(0, messageHeight);\n  // The first line is this function which we ignore.\n  stackLines.shift();\n  if (details.stackTrace && stackLines.length < Error.stackTraceLimit) {\n    for (const frame of details.stackTrace.callFrames.reverse()) {\n      if (PuppeteerURL.isPuppeteerURL(frame.url) && frame.url !== PuppeteerURL.INTERNAL_URL) {\n        const url = PuppeteerURL.parse(frame.url);\n        stackLines.unshift(`    at ${frame.functionName || url.functionName} (${url.functionName} at ${url.siteString}, <anonymous>:${frame.lineNumber}:${frame.columnNumber})`);\n      } else {\n        stackLines.push(`    at ${frame.functionName || '<anonymous>'} (${frame.url}:${frame.lineNumber}:${frame.columnNumber})`);\n      }\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\nconst getErrorDetails = details => {\n  let name = '';\n  let message;\n  const lines = details.exception?.description?.split('\\n    at ') ?? [];\n  const size = Math.min(details.stackTrace?.callFrames.length ?? 0, lines.length - 1);\n  lines.splice(-size, size);\n  if (details.exception?.className) {\n    name = details.exception.className;\n  }\n  message = lines.join('\\n');\n  if (name && message.startsWith(`${name}: `)) {\n    message = message.slice(name.length + 2);\n  }\n  return {\n    message,\n    name\n  };\n};\n/**\n * @internal\n */\nexport function createClientError(details) {\n  let name;\n  let message;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if ((details.exception.type !== 'object' || details.exception.subtype !== 'error') && !details.exception.objectId) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const error = new Error(message);\n  error.name = name;\n  const messageHeight = error.message.split('\\n').length;\n  const messageLines = error.stack.split('\\n').splice(0, messageHeight);\n  const stackLines = [];\n  if (details.stackTrace) {\n    for (const frame of details.stackTrace.callFrames) {\n      // Note we need to add `1` because the values are 0-indexed.\n      stackLines.push(`    at ${frame.functionName || '<anonymous>'} (${frame.url}:${frame.lineNumber + 1}:${frame.columnNumber + 1})`);\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\n/**\n * @internal\n */\nexport function valueFromRemoteObject(remoteObject) {\n  assert(!remoteObject.objectId, 'Cannot extract value when objectId is given');\n  if (remoteObject.unserializableValue) {\n    if (remoteObject.type === 'bigint') {\n      return BigInt(remoteObject.unserializableValue.replace('n', ''));\n    }\n    switch (remoteObject.unserializableValue) {\n      case '-0':\n        return -0;\n      case 'NaN':\n        return NaN;\n      case 'Infinity':\n        return Infinity;\n      case '-Infinity':\n        return -Infinity;\n      default:\n        throw new Error('Unsupported unserializable value: ' + remoteObject.unserializableValue);\n    }\n  }\n  return remoteObject.value;\n}\n/**\n * @internal\n */\nexport function addPageBinding(type, name, prefix) {\n  // Depending on the frame loading state either Runtime.evaluate or\n  // Page.addScriptToEvaluateOnNewDocument might succeed. Let's check that we\n  // don't re-wrap Puppeteer's binding.\n  // @ts-expect-error: In a different context.\n  if (globalThis[name]) {\n    return;\n  }\n  // We replace the CDP binding with a Puppeteer binding.\n  Object.assign(globalThis, {\n    [name](...args) {\n      // This is the Puppeteer binding.\n      // @ts-expect-error: In a different context.\n      const callPuppeteer = globalThis[name];\n      callPuppeteer.args ??= new Map();\n      callPuppeteer.callbacks ??= new Map();\n      const seq = (callPuppeteer.lastSeq ?? 0) + 1;\n      callPuppeteer.lastSeq = seq;\n      callPuppeteer.args.set(seq, args);\n      // @ts-expect-error: In a different context.\n      // Needs to be the same as CDP_BINDING_PREFIX.\n      globalThis[prefix + name](JSON.stringify({\n        type,\n        name,\n        seq,\n        args,\n        isTrivial: !args.some(value => {\n          return value instanceof Node;\n        })\n      }));\n      return new Promise((resolve, reject) => {\n        callPuppeteer.callbacks.set(seq, {\n          resolve(value) {\n            callPuppeteer.args.delete(seq);\n            resolve(value);\n          },\n          reject(value) {\n            callPuppeteer.args.delete(seq);\n            reject(value);\n          }\n        });\n      });\n    }\n  });\n}\n/**\n * @internal\n */\nexport const CDP_BINDING_PREFIX = 'puppeteer_';\n/**\n * @internal\n */\nexport function pageBindingInitString(type, name) {\n  return evaluationString(addPageBinding, type, name, CDP_BINDING_PREFIX);\n}","map":{"version":3,"names":["PuppeteerURL","evaluationString","assert","createEvaluationError","details","name","message","exception","text","type","subtype","objectId","valueFromRemoteObject","detail","getErrorDetails","messageHeight","split","length","error","Error","stackLines","stack","messageLines","splice","shift","stackTrace","stackTraceLimit","frame","callFrames","reverse","isPuppeteerURL","url","INTERNAL_URL","parse","unshift","functionName","siteString","lineNumber","columnNumber","push","join","lines","description","size","Math","min","className","startsWith","slice","createClientError","remoteObject","unserializableValue","BigInt","replace","NaN","Infinity","value","addPageBinding","prefix","globalThis","Object","assign","args","callPuppeteer","Map","callbacks","seq","lastSeq","set","JSON","stringify","isTrivial","some","Node","Promise","resolve","reject","delete","CDP_BINDING_PREFIX","pageBindingInitString"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\cdp\\utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {PuppeteerURL, evaluationString} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\n/**\n * @internal\n */\nexport function createEvaluationError(\n  details: Protocol.Runtime.ExceptionDetails\n): unknown {\n  let name: string;\n  let message: string;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if (\n    (details.exception.type !== 'object' ||\n      details.exception.subtype !== 'error') &&\n    !details.exception.objectId\n  ) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const messageHeight = message.split('\\n').length;\n  const error = new Error(message);\n  error.name = name;\n  const stackLines = error.stack!.split('\\n');\n  const messageLines = stackLines.splice(0, messageHeight);\n\n  // The first line is this function which we ignore.\n  stackLines.shift();\n  if (details.stackTrace && stackLines.length < Error.stackTraceLimit) {\n    for (const frame of details.stackTrace.callFrames.reverse()) {\n      if (\n        PuppeteerURL.isPuppeteerURL(frame.url) &&\n        frame.url !== PuppeteerURL.INTERNAL_URL\n      ) {\n        const url = PuppeteerURL.parse(frame.url);\n        stackLines.unshift(\n          `    at ${frame.functionName || url.functionName} (${\n            url.functionName\n          } at ${url.siteString}, <anonymous>:${frame.lineNumber}:${\n            frame.columnNumber\n          })`\n        );\n      } else {\n        stackLines.push(\n          `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n            frame.lineNumber\n          }:${frame.columnNumber})`\n        );\n      }\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\n\nconst getErrorDetails = (details: Protocol.Runtime.ExceptionDetails) => {\n  let name = '';\n  let message: string;\n  const lines = details.exception?.description?.split('\\n    at ') ?? [];\n  const size = Math.min(\n    details.stackTrace?.callFrames.length ?? 0,\n    lines.length - 1\n  );\n  lines.splice(-size, size);\n  if (details.exception?.className) {\n    name = details.exception.className;\n  }\n  message = lines.join('\\n');\n  if (name && message.startsWith(`${name}: `)) {\n    message = message.slice(name.length + 2);\n  }\n  return {message, name};\n};\n\n/**\n * @internal\n */\nexport function createClientError(\n  details: Protocol.Runtime.ExceptionDetails\n): Error {\n  let name: string;\n  let message: string;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if (\n    (details.exception.type !== 'object' ||\n      details.exception.subtype !== 'error') &&\n    !details.exception.objectId\n  ) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const error = new Error(message);\n  error.name = name;\n\n  const messageHeight = error.message.split('\\n').length;\n  const messageLines = error.stack!.split('\\n').splice(0, messageHeight);\n\n  const stackLines = [];\n  if (details.stackTrace) {\n    for (const frame of details.stackTrace.callFrames) {\n      // Note we need to add `1` because the values are 0-indexed.\n      stackLines.push(\n        `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n          frame.lineNumber + 1\n        }:${frame.columnNumber + 1})`\n      );\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\n\n/**\n * @internal\n */\nexport function valueFromRemoteObject(\n  remoteObject: Protocol.Runtime.RemoteObject\n): any {\n  assert(!remoteObject.objectId, 'Cannot extract value when objectId is given');\n  if (remoteObject.unserializableValue) {\n    if (remoteObject.type === 'bigint') {\n      return BigInt(remoteObject.unserializableValue.replace('n', ''));\n    }\n    switch (remoteObject.unserializableValue) {\n      case '-0':\n        return -0;\n      case 'NaN':\n        return NaN;\n      case 'Infinity':\n        return Infinity;\n      case '-Infinity':\n        return -Infinity;\n      default:\n        throw new Error(\n          'Unsupported unserializable value: ' +\n            remoteObject.unserializableValue\n        );\n    }\n  }\n  return remoteObject.value;\n}\n\n/**\n * @internal\n */\nexport function addPageBinding(\n  type: string,\n  name: string,\n  prefix: string\n): void {\n  // Depending on the frame loading state either Runtime.evaluate or\n  // Page.addScriptToEvaluateOnNewDocument might succeed. Let's check that we\n  // don't re-wrap Puppeteer's binding.\n  // @ts-expect-error: In a different context.\n  if (globalThis[name]) {\n    return;\n  }\n\n  // We replace the CDP binding with a Puppeteer binding.\n  Object.assign(globalThis, {\n    [name](...args: unknown[]): Promise<unknown> {\n      // This is the Puppeteer binding.\n      // @ts-expect-error: In a different context.\n      const callPuppeteer = globalThis[name];\n      callPuppeteer.args ??= new Map();\n      callPuppeteer.callbacks ??= new Map();\n\n      const seq = (callPuppeteer.lastSeq ?? 0) + 1;\n      callPuppeteer.lastSeq = seq;\n      callPuppeteer.args.set(seq, args);\n\n      // @ts-expect-error: In a different context.\n      // Needs to be the same as CDP_BINDING_PREFIX.\n      globalThis[prefix + name](\n        JSON.stringify({\n          type,\n          name,\n          seq,\n          args,\n          isTrivial: !args.some(value => {\n            return value instanceof Node;\n          }),\n        })\n      );\n\n      return new Promise((resolve, reject) => {\n        callPuppeteer.callbacks.set(seq, {\n          resolve(value: unknown) {\n            callPuppeteer.args.delete(seq);\n            resolve(value);\n          },\n          reject(value?: unknown) {\n            callPuppeteer.args.delete(seq);\n            reject(value);\n          },\n        });\n      });\n    },\n  });\n}\n\n/**\n * @internal\n */\nexport const CDP_BINDING_PREFIX = 'puppeteer_';\n\n/**\n * @internal\n */\nexport function pageBindingInitString(type: string, name: string): string {\n  return evaluationString(addPageBinding, type, name, CDP_BINDING_PREFIX);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction } from \"../../../lib/RunnableFunction.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport class Completions extends APIResource {\n  async parse(body, options) {\n    validateInputTools(body.tools);\n    const completion = await this._client.chat.completions.create(body, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'beta.chat.completions.parse'\n      }\n    });\n    return parseChatCompletion(completion, body);\n  }\n  runFunctions(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n    }\n    return ChatCompletionRunner.runFunctions(this._client, body, options);\n  }\n  runTools(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n    }\n    return ChatCompletionRunner.runTools(this._client, body, options);\n  }\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body, options) {\n    return ChatCompletionStream.createChatCompletion(this._client, body, options);\n  }\n}\n//# sourceMappingURL=completions.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
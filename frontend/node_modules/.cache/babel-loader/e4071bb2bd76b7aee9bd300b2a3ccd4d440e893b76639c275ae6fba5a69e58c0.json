{"ast":null,"code":"/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * @internal\n */\nexport class CdpPreloadScript {\n  /**\n   * This is the ID of the preload script returned by\n   * Page.addScriptToEvaluateOnNewDocument in the main frame.\n   *\n   * Sub-frames would get a different CDP ID because\n   * addScriptToEvaluateOnNewDocument is called for each subframe. But\n   * users only see this ID and subframe IDs are internal to Puppeteer.\n   */\n  #id;\n  #source;\n  #frameToId = new WeakMap();\n  constructor(mainFrame, id, source) {\n    this.#id = id;\n    this.#source = source;\n    this.#frameToId.set(mainFrame, id);\n  }\n  get id() {\n    return this.#id;\n  }\n  get source() {\n    return this.#source;\n  }\n  getIdForFrame(frame) {\n    return this.#frameToId.get(frame);\n  }\n  setIdForFrame(frame, identifier) {\n    this.#frameToId.set(frame, identifier);\n  }\n}","map":{"version":3,"names":["CdpPreloadScript","id","source","frameToId","WeakMap","constructor","mainFrame","set","getIdForFrame","frame","get","setIdForFrame","identifier"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\cdp\\CdpPreloadScript.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {CdpFrame} from './Frame.js';\n\n/**\n * @internal\n */\nexport class CdpPreloadScript {\n  /**\n   * This is the ID of the preload script returned by\n   * Page.addScriptToEvaluateOnNewDocument in the main frame.\n   *\n   * Sub-frames would get a different CDP ID because\n   * addScriptToEvaluateOnNewDocument is called for each subframe. But\n   * users only see this ID and subframe IDs are internal to Puppeteer.\n   */\n  #id: string;\n  #source: string;\n  #frameToId = new WeakMap<CdpFrame, string>();\n\n  constructor(mainFrame: CdpFrame, id: string, source: string) {\n    this.#id = id;\n    this.#source = source;\n    this.#frameToId.set(mainFrame, id);\n  }\n\n  get id(): string {\n    return this.#id;\n  }\n\n  get source(): string {\n    return this.#source;\n  }\n\n  getIdForFrame(frame: CdpFrame): string | undefined {\n    return this.#frameToId.get(frame);\n  }\n\n  setIdForFrame(frame: CdpFrame, identifier: string): void {\n    this.#frameToId.set(frame, identifier);\n  }\n}\n"],"mappings":"AAAA;;;;;AAQA;;;AAGA,OAAM,MAAOA,gBAAgB;EAC3B;;;;;;;;EAQA,CAAAC,EAAG;EACH,CAAAC,MAAO;EACP,CAAAC,SAAU,GAAG,IAAIC,OAAO,EAAoB;EAE5CC,YAAYC,SAAmB,EAAEL,EAAU,EAAEC,MAAc;IACzD,IAAI,CAAC,CAAAD,EAAG,GAAGA,EAAE;IACb,IAAI,CAAC,CAAAC,MAAO,GAAGA,MAAM;IACrB,IAAI,CAAC,CAAAC,SAAU,CAACI,GAAG,CAACD,SAAS,EAAEL,EAAE,CAAC;EACpC;EAEA,IAAIA,EAAEA,CAAA;IACJ,OAAO,IAAI,CAAC,CAAAA,EAAG;EACjB;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAAC,CAAAA,MAAO;EACrB;EAEAM,aAAaA,CAACC,KAAe;IAC3B,OAAO,IAAI,CAAC,CAAAN,SAAU,CAACO,GAAG,CAACD,KAAK,CAAC;EACnC;EAEAE,aAAaA,CAACF,KAAe,EAAEG,UAAkB;IAC/C,IAAI,CAAC,CAAAT,SAAU,CAACI,GAAG,CAACE,KAAK,EAAEG,UAAU,CAAC;EACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
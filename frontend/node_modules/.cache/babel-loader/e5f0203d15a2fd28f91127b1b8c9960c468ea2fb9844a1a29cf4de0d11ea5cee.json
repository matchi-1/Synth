{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport fs from 'fs';\nimport { rename, unlink, mkdtemp } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { Browser as SupportedBrowsers, createProfile } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { BrowserLauncher } from './BrowserLauncher.js';\nimport { rm } from './util/fs.js';\n/**\n * @internal\n */\nexport class FirefoxLauncher extends BrowserLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'firefox');\n  }\n  static getPreferences(extraPrefsFirefox, protocol) {\n    return {\n      ...extraPrefsFirefox,\n      ...(protocol === 'webDriverBiDi' ? {\n        // Only enable the WebDriver BiDi protocol\n        'remote.active-protocols': 1\n      } : {\n        // Do not close the window when the last tab gets closed\n        'browser.tabs.closeWindowWithLastTab': false,\n        // Prevent various error message on the console\n        // jest-puppeteer asserts that no error message is emitted by the console\n        'network.cookie.cookieBehavior': 0,\n        // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n        'fission.bfcacheInParent': false,\n        // Only enable the CDP protocol\n        'remote.active-protocols': 2\n      }),\n      // Force all web content to use a single content process. TODO: remove\n      // this once Firefox supports mouse event dispatch from the main frame\n      // context. Once this happens, webContentIsolationStrategy should only\n      // be set for CDP. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1773393\n      'fission.webContentIsolationStrategy': 0\n    };\n  }\n  /**\n   * @internal\n   */\n  async computeLaunchArguments(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null\n    } = options;\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(...this.defaultArgs(options).filter(arg => {\n        return !ignoreDefaultArgs.includes(arg);\n      }));\n    } else {\n      firefoxArguments.push(...args);\n    }\n    if (!firefoxArguments.some(argument => {\n      return argument.startsWith('--remote-debugging-');\n    })) {\n      if (pipe) {\n        assert(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');\n      }\n      firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n    }\n    let userDataDir;\n    let isTempUserDataDir = true;\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir) {\n        throw new Error(`Missing value for profile command line argument`);\n      }\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: FirefoxLauncher.getPreferences(extraPrefsFirefox, options.protocol)\n    });\n    let firefoxExecutable;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(executablePath, `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``);\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath();\n    }\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable\n    };\n  }\n  /**\n   * @internal\n   */\n  async cleanUserDataDir(userDataDir, opts) {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        const backupSuffix = '.puppeteer';\n        const backupFiles = ['prefs.js', 'user.js'];\n        const results = await Promise.allSettled(backupFiles.map(async file => {\n          const prefsBackupPath = path.join(userDataDir, file + backupSuffix);\n          if (fs.existsSync(prefsBackupPath)) {\n            const prefsPath = path.join(userDataDir, file);\n            await unlink(prefsPath);\n            await rename(prefsBackupPath, prefsPath);\n          }\n        }));\n        for (const result of results) {\n          if (result.status === 'rejected') {\n            throw result.reason;\n          }\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n  executablePath() {\n    return this.resolveExecutablePath();\n  }\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const firefoxArguments = [];\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}","map":{"version":3,"names":["fs","rename","unlink","mkdtemp","os","path","Browser","SupportedBrowsers","createProfile","debugError","assert","BrowserLauncher","rm","FirefoxLauncher","constructor","puppeteer","getPreferences","extraPrefsFirefox","protocol","computeLaunchArguments","options","ignoreDefaultArgs","args","executablePath","pipe","debuggingPort","firefoxArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","userDataDir","isTempUserDataDir","profileArgIndex","findIndex","Error","getProfilePath","FIREFOX","preferences","firefoxExecutable","_isPuppeteerCore","cleanUserDataDir","opts","isTemp","error","backupSuffix","backupFiles","results","Promise","allSettled","map","file","prefsBackupPath","join","existsSync","prefsPath","result","status","reason","resolveExecutablePath","devtools","headless","platform","every"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\node\\FirefoxLauncher.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport fs from 'fs';\nimport {rename, unlink, mkdtemp} from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\n\nimport {Browser as SupportedBrowsers, createProfile} from '@puppeteer/browsers';\n\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport {BrowserLauncher, type ResolvedLaunchArgs} from './BrowserLauncher.js';\nimport type {\n  BrowserLaunchArgumentOptions,\n  PuppeteerNodeLaunchOptions,\n} from './LaunchOptions.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\nimport {rm} from './util/fs.js';\n\n/**\n * @internal\n */\nexport class FirefoxLauncher extends BrowserLauncher {\n  constructor(puppeteer: PuppeteerNode) {\n    super(puppeteer, 'firefox');\n  }\n\n  static getPreferences(\n    extraPrefsFirefox?: Record<string, unknown>,\n    protocol?: 'cdp' | 'webDriverBiDi'\n  ): Record<string, unknown> {\n    return {\n      ...extraPrefsFirefox,\n      ...(protocol === 'webDriverBiDi'\n        ? {\n            // Only enable the WebDriver BiDi protocol\n            'remote.active-protocols': 1,\n          }\n        : {\n            // Do not close the window when the last tab gets closed\n            'browser.tabs.closeWindowWithLastTab': false,\n            // Prevent various error message on the console\n            // jest-puppeteer asserts that no error message is emitted by the console\n            'network.cookie.cookieBehavior': 0,\n            // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n            'fission.bfcacheInParent': false,\n            // Only enable the CDP protocol\n            'remote.active-protocols': 2,\n          }),\n      // Force all web content to use a single content process. TODO: remove\n      // this once Firefox supports mouse event dispatch from the main frame\n      // context. Once this happens, webContentIsolationStrategy should only\n      // be set for CDP. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1773393\n      'fission.webContentIsolationStrategy': 0,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async computeLaunchArguments(\n    options: PuppeteerNodeLaunchOptions = {}\n  ): Promise<ResolvedLaunchArgs> {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null,\n    } = options;\n\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(\n        ...this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        })\n      );\n    } else {\n      firefoxArguments.push(...args);\n    }\n\n    if (\n      !firefoxArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })\n    ) {\n      if (pipe) {\n        assert(\n          debuggingPort === null,\n          'Browser should be launched with either pipe or debugging port - not both.'\n        );\n      }\n      firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n    }\n\n    let userDataDir: string | undefined;\n    let isTempUserDataDir = true;\n\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir) {\n        throw new Error(`Missing value for profile command line argument`);\n      }\n\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: FirefoxLauncher.getPreferences(\n        extraPrefsFirefox,\n        options.protocol\n      ),\n    });\n\n    let firefoxExecutable: string;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(\n        executablePath,\n        `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``\n      );\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath();\n    }\n\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async cleanUserDataDir(\n    userDataDir: string,\n    opts: {isTemp: boolean}\n  ): Promise<void> {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        const backupSuffix = '.puppeteer';\n        const backupFiles = ['prefs.js', 'user.js'];\n\n        const results = await Promise.allSettled(\n          backupFiles.map(async file => {\n            const prefsBackupPath = path.join(userDataDir, file + backupSuffix);\n            if (fs.existsSync(prefsBackupPath)) {\n              const prefsPath = path.join(userDataDir, file);\n              await unlink(prefsPath);\n              await rename(prefsBackupPath, prefsPath);\n            }\n          })\n        );\n        for (const result of results) {\n          if (result.status === 'rejected') {\n            throw result.reason;\n          }\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n\n  override executablePath(): string {\n    return this.resolveExecutablePath();\n  }\n\n  override defaultArgs(options: BrowserLaunchArgumentOptions = {}): string[] {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null,\n    } = options;\n\n    const firefoxArguments = [];\n\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (\n      args.every(arg => {\n        return arg.startsWith('-');\n      })\n    ) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { QueryHandler } from './QueryHandler.js';\n/**\n * @internal\n */\nexport class PierceQueryHandler extends QueryHandler {\n  static querySelector = (element, selector, {\n    pierceQuerySelector\n  }) => {\n    return pierceQuerySelector(element, selector);\n  };\n  static querySelectorAll = (element, selector, {\n    pierceQuerySelectorAll\n  }) => {\n    return pierceQuerySelectorAll(element, selector);\n  };\n}","map":{"version":3,"names":["QueryHandler","PierceQueryHandler","querySelector","element","selector","pierceQuerySelector","querySelectorAll","pierceQuerySelectorAll"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\common\\PierceQueryHandler.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type PuppeteerUtil from '../injected/injected.js';\n\nimport {QueryHandler} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class PierceQueryHandler extends QueryHandler {\n  static override querySelector = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelector}: PuppeteerUtil\n  ): Node | null => {\n    return pierceQuerySelector(element, selector);\n  };\n  static override querySelectorAll = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelectorAll}: PuppeteerUtil\n  ): Iterable<Node> => {\n    return pierceQuerySelectorAll(element, selector);\n  };\n}\n"],"mappings":"AAAA;;;;;AAQA,SAAQA,YAAY,QAAO,mBAAmB;AAE9C;;;AAGA,OAAM,MAAOC,kBAAmB,SAAQD,YAAY;EAClD,OAAgBE,aAAa,GAAGA,CAC9BC,OAAa,EACbC,QAAgB,EAChB;IAACC;EAAmB,CAAgB,KACrB;IACf,OAAOA,mBAAmB,CAACF,OAAO,EAAEC,QAAQ,CAAC;EAC/C,CAAC;EACD,OAAgBE,gBAAgB,GAAGA,CACjCH,OAAa,EACbC,QAAgB,EAChB;IAACG;EAAsB,CAAgB,KACrB;IAClB,OAAOA,sBAAsB,CAACJ,OAAO,EAAEC,QAAQ,CAAC;EAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
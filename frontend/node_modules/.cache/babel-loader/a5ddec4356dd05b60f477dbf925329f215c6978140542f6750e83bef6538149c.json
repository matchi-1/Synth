{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\nvar invariant = require(\"./invariant\");\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\nfunction _assertSingleLink(input) {\n  \"production\" !== process.env.NODE_ENV ? invariant(input.props.checkedLink == null || input.props.valueLink == null, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(input.props.checkedLink == null || input.props.valueLink == null);\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  \"production\" !== process.env.NODE_ENV ? invariant(input.props.value == null && input.props.onChange == null, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(input.props.value == null && input.props.onChange == null);\n}\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  \"production\" !== process.env.NODE_ENV ? invariant(input.props.checked == null && input.props.onChange == null, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(input.props.checked == null && input.props.onChange == null);\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function (props, propName, componentName) {\n        if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n          return null;\n        }\n        return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n      },\n      checked: function (props, propName, componentName) {\n        if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n          return null;\n        }\n        return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function (input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\nmodule.exports = LinkedValueUtils;","map":{"version":3,"names":["ReactPropTypes","require","invariant","hasReadOnlyValue","_assertSingleLink","input","process","env","NODE_ENV","props","checkedLink","valueLink","_assertValueLink","value","onChange","_assertCheckedLink","checked","_handleLinkedValueChange","e","requestChange","target","_handleLinkedCheckChange","LinkedValueUtils","Mixin","propTypes","propName","componentName","type","readOnly","disabled","Error","func","getValue","getChecked","getOnChange","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/LinkedValueUtils.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\n\nvar invariant = require(\"./invariant\");\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEhD,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIE,gBAAgB,GAAG;EACrB,QAAQ,EAAE,IAAI;EACd,UAAU,EAAE,IAAI;EAChB,OAAO,EAAE,IAAI;EACb,QAAQ,EAAE,IAAI;EACd,OAAO,EAAE,IAAI;EACb,OAAO,EAAE,IAAI;EACb,QAAQ,EAAE;AACZ,CAAC;AAED,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAC/B,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGN,SAAS,CAChDG,KAAK,CAACI,KAAK,CAACC,WAAW,IAAI,IAAI,IAAIL,KAAK,CAACI,KAAK,CAACE,SAAS,IAAI,IAAI,EAChE,mEAAmE,GACnE,wEACF,CAAC,GAAGT,SAAS,CAACG,KAAK,CAACI,KAAK,CAACC,WAAW,IAAI,IAAI,IAAIL,KAAK,CAACI,KAAK,CAACE,SAAS,IAAI,IAAI,CAAC;AACjF;AACA,SAASC,gBAAgBA,CAACP,KAAK,EAAE;EAC/BD,iBAAiB,CAACC,KAAK,CAAC;EACvB,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGN,SAAS,CAChDG,KAAK,CAACI,KAAK,CAACI,KAAK,IAAI,IAAI,IAAIR,KAAK,CAACI,KAAK,CAACK,QAAQ,IAAI,IAAI,EACzD,wEAAwE,GACxE,sEACF,CAAC,GAAGZ,SAAS,CAACG,KAAK,CAACI,KAAK,CAACI,KAAK,IAAI,IAAI,IAAIR,KAAK,CAACI,KAAK,CAACK,QAAQ,IAAI,IAAI,CAAC;AAC1E;AAEA,SAASC,kBAAkBA,CAACV,KAAK,EAAE;EACjCD,iBAAiB,CAACC,KAAK,CAAC;EACvB,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGN,SAAS,CAChDG,KAAK,CAACI,KAAK,CAACO,OAAO,IAAI,IAAI,IAAIX,KAAK,CAACI,KAAK,CAACK,QAAQ,IAAI,IAAI,EAC3D,yEAAyE,GACzE,sEAAsE,GACtE,iBACF,CAAC,GAAGZ,SAAS,CAACG,KAAK,CAACI,KAAK,CAACO,OAAO,IAAI,IAAI,IAAIX,KAAK,CAACI,KAAK,CAACK,QAAQ,IAAI,IAAI,CAAC;AAC5E;;AAEA;AACA;AACA;AACA,SAASG,wBAAwBA,CAACC,CAAC,EAAE;EACnC;EACA,IAAI,CAACT,KAAK,CAACE,SAAS,CAACQ,aAAa,CAACD,CAAC,CAACE,MAAM,CAACP,KAAK,CAAC;AACpD;;AAEA;AACA;AACA;AACA,SAASQ,wBAAwBA,CAACH,CAAC,EAAE;EACnC;EACA,IAAI,CAACT,KAAK,CAACC,WAAW,CAACS,aAAa,CAACD,CAAC,CAACE,MAAM,CAACJ,OAAO,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA,IAAIM,gBAAgB,GAAG;EACrBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTX,KAAK,EAAE,SAAAA,CAASJ,KAAK,EAAEgB,QAAQ,EAAEC,aAAa,EAAE;QAC9C,IAAI,CAACjB,KAAK,CAACgB,QAAQ,CAAC,IAChBtB,gBAAgB,CAACM,KAAK,CAACkB,IAAI,CAAC,IAC5BlB,KAAK,CAACK,QAAQ,IACdL,KAAK,CAACmB,QAAQ,IACdnB,KAAK,CAACoB,QAAQ,EAAE;UAClB,OAAO,IAAI;QACb;QACA,OAAO,IAAIC,KAAK,CACd,yDAAyD,GACzD,6DAA6D,GAC7D,6DAA6D,GAC7D,sCACF,CAAC;MACH,CAAC;MACDd,OAAO,EAAE,SAAAA,CAASP,KAAK,EAAEgB,QAAQ,EAAEC,aAAa,EAAE;QAChD,IAAI,CAACjB,KAAK,CAACgB,QAAQ,CAAC,IAChBhB,KAAK,CAACK,QAAQ,IACdL,KAAK,CAACmB,QAAQ,IACdnB,KAAK,CAACoB,QAAQ,EAAE;UAClB,OAAO,IAAI;QACb;QACA,OAAO,IAAIC,KAAK,CACd,2DAA2D,GAC3D,6DAA6D,GAC7D,+DAA+D,GAC/D,sCACF,CAAC;MACH,CAAC;MACDhB,QAAQ,EAAEd,cAAc,CAAC+B;IAC3B;EACF,CAAC;EAED;AACF;AACA;AACA;EACEC,QAAQ,EAAE,SAAAA,CAAS3B,KAAK,EAAE;IACxB,IAAIA,KAAK,CAACI,KAAK,CAACE,SAAS,EAAE;MACzBC,gBAAgB,CAACP,KAAK,CAAC;MACvB,OAAOA,KAAK,CAACI,KAAK,CAACE,SAAS,CAACE,KAAK;IACpC;IACA,OAAOR,KAAK,CAACI,KAAK,CAACI,KAAK;EAC1B,CAAC;EAED;AACF;AACA;AACA;AACA;EACEoB,UAAU,EAAE,SAAAA,CAAS5B,KAAK,EAAE;IAC1B,IAAIA,KAAK,CAACI,KAAK,CAACC,WAAW,EAAE;MAC3BK,kBAAkB,CAACV,KAAK,CAAC;MACzB,OAAOA,KAAK,CAACI,KAAK,CAACC,WAAW,CAACG,KAAK;IACtC;IACA,OAAOR,KAAK,CAACI,KAAK,CAACO,OAAO;EAC5B,CAAC;EAED;AACF;AACA;AACA;EACEkB,WAAW,EAAE,SAAAA,CAAS7B,KAAK,EAAE;IAC3B,IAAIA,KAAK,CAACI,KAAK,CAACE,SAAS,EAAE;MACzBC,gBAAgB,CAACP,KAAK,CAAC;MACvB,OAAOY,wBAAwB;IACjC,CAAC,MAAM,IAAIZ,KAAK,CAACI,KAAK,CAACC,WAAW,EAAE;MAClCK,kBAAkB,CAACV,KAAK,CAAC;MACzB,OAAOgB,wBAAwB;IACjC;IACA,OAAOhB,KAAK,CAACI,KAAK,CAACK,QAAQ;EAC7B;AACF,CAAC;AAEDqB,MAAM,CAACC,OAAO,GAAGd,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ARIAQueryHandler } from '../cdp/AriaQueryHandler.js';\nimport { CSSQueryHandler } from './CSSQueryHandler.js';\nimport { customQueryHandlers } from './CustomQueryHandler.js';\nimport { PierceQueryHandler } from './PierceQueryHandler.js';\nimport { PQueryHandler } from './PQueryHandler.js';\nimport { parsePSelectors } from './PSelectorParser.js';\nimport { TextQueryHandler } from './TextQueryHandler.js';\nimport { XPathQueryHandler } from './XPathQueryHandler.js';\nconst BUILTIN_QUERY_HANDLERS = {\n  aria: ARIAQueryHandler,\n  pierce: PierceQueryHandler,\n  xpath: XPathQueryHandler,\n  text: TextQueryHandler\n};\nconst QUERY_SEPARATORS = ['=', '/'];\n/**\n * @internal\n */\nexport function getQueryHandlerAndSelector(selector) {\n  for (const handlerMap of [customQueryHandlers.names().map(name => {\n    return [name, customQueryHandlers.get(name)];\n  }), Object.entries(BUILTIN_QUERY_HANDLERS)]) {\n    for (const [name, QueryHandler] of handlerMap) {\n      for (const separator of QUERY_SEPARATORS) {\n        const prefix = `${name}${separator}`;\n        if (selector.startsWith(prefix)) {\n          selector = selector.slice(prefix.length);\n          return {\n            updatedSelector: selector,\n            polling: name === 'aria' ? \"raf\" /* PollingOptions.RAF */ : \"mutation\" /* PollingOptions.MUTATION */,\n            QueryHandler\n          };\n        }\n      }\n    }\n  }\n  try {\n    const [pSelector, isPureCSS, hasPseudoClasses, hasAria] = parsePSelectors(selector);\n    if (isPureCSS) {\n      return {\n        updatedSelector: selector,\n        polling: hasPseudoClasses ? \"raf\" /* PollingOptions.RAF */ : \"mutation\" /* PollingOptions.MUTATION */,\n        QueryHandler: CSSQueryHandler\n      };\n    }\n    return {\n      updatedSelector: JSON.stringify(pSelector),\n      polling: hasAria ? \"raf\" /* PollingOptions.RAF */ : \"mutation\" /* PollingOptions.MUTATION */,\n      QueryHandler: PQueryHandler\n    };\n  } catch {\n    return {\n      updatedSelector: selector,\n      polling: \"mutation\" /* PollingOptions.MUTATION */,\n      QueryHandler: CSSQueryHandler\n    };\n  }\n}","map":{"version":3,"names":["ARIAQueryHandler","CSSQueryHandler","customQueryHandlers","PierceQueryHandler","PQueryHandler","parsePSelectors","TextQueryHandler","XPathQueryHandler","BUILTIN_QUERY_HANDLERS","aria","pierce","xpath","text","QUERY_SEPARATORS","getQueryHandlerAndSelector","selector","handlerMap","names","map","name","get","Object","entries","QueryHandler","separator","prefix","startsWith","slice","length","updatedSelector","polling","pSelector","isPureCSS","hasPseudoClasses","hasAria","JSON","stringify"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\common\\GetQueryHandler.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ARIAQueryHandler} from '../cdp/AriaQueryHandler.js';\n\nimport {CSSQueryHandler} from './CSSQueryHandler.js';\nimport {customQueryHandlers} from './CustomQueryHandler.js';\nimport {PierceQueryHandler} from './PierceQueryHandler.js';\nimport {PQueryHandler} from './PQueryHandler.js';\nimport {parsePSelectors} from './PSelectorParser.js';\nimport type {QueryHandler} from './QueryHandler.js';\nimport {PollingOptions} from './QueryHandler.js';\nimport {TextQueryHandler} from './TextQueryHandler.js';\nimport {XPathQueryHandler} from './XPathQueryHandler.js';\n\nconst BUILTIN_QUERY_HANDLERS = {\n  aria: ARIAQueryHandler,\n  pierce: PierceQueryHandler,\n  xpath: XPathQueryHandler,\n  text: TextQueryHandler,\n} as const;\n\nconst QUERY_SEPARATORS = ['=', '/'];\n\n/**\n * @internal\n */\nexport function getQueryHandlerAndSelector(selector: string): {\n  updatedSelector: string;\n  polling: PollingOptions;\n  QueryHandler: typeof QueryHandler;\n} {\n  for (const handlerMap of [\n    customQueryHandlers.names().map(name => {\n      return [name, customQueryHandlers.get(name)!] as const;\n    }),\n    Object.entries(BUILTIN_QUERY_HANDLERS),\n  ]) {\n    for (const [name, QueryHandler] of handlerMap) {\n      for (const separator of QUERY_SEPARATORS) {\n        const prefix = `${name}${separator}`;\n        if (selector.startsWith(prefix)) {\n          selector = selector.slice(prefix.length);\n          return {\n            updatedSelector: selector,\n            polling:\n              name === 'aria' ? PollingOptions.RAF : PollingOptions.MUTATION,\n            QueryHandler,\n          };\n        }\n      }\n    }\n  }\n  try {\n    const [pSelector, isPureCSS, hasPseudoClasses, hasAria] =\n      parsePSelectors(selector);\n    if (isPureCSS) {\n      return {\n        updatedSelector: selector,\n        polling: hasPseudoClasses\n          ? PollingOptions.RAF\n          : PollingOptions.MUTATION,\n        QueryHandler: CSSQueryHandler,\n      };\n    }\n    return {\n      updatedSelector: JSON.stringify(pSelector),\n      polling: hasAria ? PollingOptions.RAF : PollingOptions.MUTATION,\n      QueryHandler: PQueryHandler,\n    };\n  } catch {\n    return {\n      updatedSelector: selector,\n      polling: PollingOptions.MUTATION,\n      QueryHandler: CSSQueryHandler,\n    };\n  }\n}\n"],"mappings":"AAAA;;;;;AAMA,SAAQA,gBAAgB,QAAO,4BAA4B;AAE3D,SAAQC,eAAe,QAAO,sBAAsB;AACpD,SAAQC,mBAAmB,QAAO,yBAAyB;AAC3D,SAAQC,kBAAkB,QAAO,yBAAyB;AAC1D,SAAQC,aAAa,QAAO,oBAAoB;AAChD,SAAQC,eAAe,QAAO,sBAAsB;AAGpD,SAAQC,gBAAgB,QAAO,uBAAuB;AACtD,SAAQC,iBAAiB,QAAO,wBAAwB;AAExD,MAAMC,sBAAsB,GAAG;EAC7BC,IAAI,EAAET,gBAAgB;EACtBU,MAAM,EAAEP,kBAAkB;EAC1BQ,KAAK,EAAEJ,iBAAiB;EACxBK,IAAI,EAAEN;CACE;AAEV,MAAMO,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAEnC;;;AAGA,OAAM,SAAUC,0BAA0BA,CAACC,QAAgB;EAKzD,KAAK,MAAMC,UAAU,IAAI,CACvBd,mBAAmB,CAACe,KAAK,EAAE,CAACC,GAAG,CAACC,IAAI,IAAG;IACrC,OAAO,CAACA,IAAI,EAAEjB,mBAAmB,CAACkB,GAAG,CAACD,IAAI,CAAE,CAAU;EACxD,CAAC,CAAC,EACFE,MAAM,CAACC,OAAO,CAACd,sBAAsB,CAAC,CACvC,EAAE;IACD,KAAK,MAAM,CAACW,IAAI,EAAEI,YAAY,CAAC,IAAIP,UAAU,EAAE;MAC7C,KAAK,MAAMQ,SAAS,IAAIX,gBAAgB,EAAE;QACxC,MAAMY,MAAM,GAAG,GAAGN,IAAI,GAAGK,SAAS,EAAE;QACpC,IAAIT,QAAQ,CAACW,UAAU,CAACD,MAAM,CAAC,EAAE;UAC/BV,QAAQ,GAAGA,QAAQ,CAACY,KAAK,CAACF,MAAM,CAACG,MAAM,CAAC;UACxC,OAAO;YACLC,eAAe,EAAEd,QAAQ;YACzBe,OAAO,EACLX,IAAI,KAAK,MAAM,GAAE,iCAAqB;YACxCI;WACD;QACH;MACF;IACF;EACF;EACA,IAAI;IACF,MAAM,CAACQ,SAAS,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,OAAO,CAAC,GACrD7B,eAAe,CAACU,QAAQ,CAAC;IAC3B,IAAIiB,SAAS,EAAE;MACb,OAAO;QACLH,eAAe,EAAEd,QAAQ;QACzBe,OAAO,EAAEG,gBAAgB,GACtB,iCACA;QACHV,YAAY,EAAEtB;OACf;IACH;IACA,OAAO;MACL4B,eAAe,EAAEM,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC;MAC1CD,OAAO,EAAEI,OAAO,GAAE,iCAAqB;MACvCX,YAAY,EAAEnB;KACf;EACH,CAAC,CAAC,MAAM;IACN,OAAO;MACLyB,eAAe,EAAEd,QAAQ;MACzBe,OAAO;MACPP,YAAY,EAAEtB;KACf;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\nvar loggedTypeFailures = {};\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return current && getName(current) || undefined;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n  warnAndMonitorForKeyUse('Each child in an array or iterator should have a unique \"key\" prop.', element, parentType);\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse('Child objects should have non-numeric keys so ordering is preserved.', element, parentType);\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (ownerHasKeyUseWarning[message] = {});\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n  var parentOrOwnerAddendum = ownerName ? \" Check the render method of \" + ownerName + \".\" : parentName ? \" Check the React.render call using <\" + parentName + \">.\" : '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n    childOwnerAddendum = \" It was passed a child from \" + childOwnerName + \".\";\n  }\n  \"production\" !== process.env.NODE_ENV ? warning(false, message + '%s%s See https://fb.me/react-warning-keys for more information.', parentOrOwnerAddendum, childOwnerAddendum) : null;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        \"production\" !== process.env.NODE_ENV ? invariant(typeof propTypes[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(typeof propTypes[propName] === 'function');\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(this);\n        \"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null;\n      }\n    }\n  }\n}\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ? element._owner.getPublicInstance().constructor.displayName : null;\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n  \"production\" !== process.env.NODE_ENV ? warning(false, 'Don\\'t set .props.%s of the React component%s. Instead, specify the ' + 'correct value when initially creating the element or use ' + 'React.cloneElement to make a new element with updated props.%s', propName, elementInfo, ownerInfo) : null;\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) || !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(element);\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    \"production\" !== process.env.NODE_ENV ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : null;\n  }\n}\nvar ReactElementValidator = {\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n  createElement: function (type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    \"production\" !== process.env.NODE_ENV ? warning(type != null, 'React.createElement: type should not be null or undefined. It should ' + 'be a string (for DOM elements) or a ReactClass (for composite ' + 'components).') : null;\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n    validatePropTypes(element);\n    return element;\n  },\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            \"production\" !== process.env.NODE_ENV ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : null;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n    return validatedFactory;\n  },\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n};\nmodule.exports = ReactElementValidator;","map":{"version":3,"names":["ReactElement","require","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning","getDeclarationErrorAddendum","current","name","getName","ownerHasKeyUseWarning","loggedTypeFailures","NUMERIC_PROPERTY_REGEX","instance","publicInstance","getPublicInstance","undefined","constructor","displayName","getCurrentOwnerDisplayName","validateExplicitKey","element","parentType","_store","validated","key","warnAndMonitorForKeyUse","validatePropertyKey","test","message","ownerName","parentName","useName","memoizer","hasOwnProperty","parentOrOwnerAddendum","childOwnerAddendum","_owner","childOwnerName","process","env","NODE_ENV","validateChildKeys","node","Array","isArray","i","length","child","isValidElement","iteratorFn","entries","iterator","call","step","next","done","value","fragment","extractIfFragment","checkPropTypes","componentName","propTypes","props","location","propName","error","ex","Error","addendum","warnedPropsMutations","warnForPropsMutation","type","elementName","warningKey","elementInfo","ownerInfo","is","a","b","checkAndWarnForMutatedProps","originalProps","validatePropTypes","componentClass","getComponentClassForElement","prop","getDefaultProps","isReactClassApproved","ReactElementValidator","createElement","children","apply","arguments","createFactory","validatedFactory","bind","Object","defineProperty","enumerable","get","x","cloneElement","newElement","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactElementValidator.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See https://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. Instead, specify the ' +\n    'correct value when initially creating the element or use ' +\n    'React.cloneElement to make a new element with updated props.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { QueryHandler } from './QueryHandler.js';\n/**\n * @internal\n */\nexport class XPathQueryHandler extends QueryHandler {\n  static querySelectorAll = (element, selector, {\n    xpathQuerySelectorAll\n  }) => {\n    return xpathQuerySelectorAll(element, selector);\n  };\n  static querySelector = (element, selector, {\n    xpathQuerySelectorAll\n  }) => {\n    for (const result of xpathQuerySelectorAll(element, selector, 1)) {\n      return result;\n    }\n    return null;\n  };\n}","map":{"version":3,"names":["QueryHandler","XPathQueryHandler","querySelectorAll","element","selector","xpathQuerySelectorAll","querySelector","result"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\common\\XPathQueryHandler.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  QueryHandler,\n  type QuerySelectorAll,\n  type QuerySelector,\n} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class XPathQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {xpathQuerySelectorAll}\n  ) => {\n    return xpathQuerySelectorAll(element, selector);\n  };\n\n  static override querySelector: QuerySelector = (\n    element: Node,\n    selector: string,\n    {xpathQuerySelectorAll}\n  ) => {\n    for (const result of xpathQuerySelectorAll(element, selector, 1)) {\n      return result;\n    }\n    return null;\n  };\n}\n"],"mappings":"AAAA;;;;;AAMA,SACEA,YAAY,QAGP,mBAAmB;AAE1B;;;AAGA,OAAM,MAAOC,iBAAkB,SAAQD,YAAY;EACjD,OAAgBE,gBAAgB,GAAqBA,CACnDC,OAAO,EACPC,QAAQ,EACR;IAACC;EAAqB,CAAC,KACrB;IACF,OAAOA,qBAAqB,CAACF,OAAO,EAAEC,QAAQ,CAAC;EACjD,CAAC;EAED,OAAgBE,aAAa,GAAkBA,CAC7CH,OAAa,EACbC,QAAgB,EAChB;IAACC;EAAqB,CAAC,KACrB;IACF,KAAK,MAAME,MAAM,IAAIF,qBAAqB,CAACF,OAAO,EAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE;MAChE,OAAOG,MAAM;IACf;IACA,OAAO,IAAI;EACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n  render: function () {\n    return iframe(this.props);\n  },\n  componentDidMount: function () {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\nmodule.exports = ReactDOMIframe;","map":{"version":3,"names":["EventConstants","require","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactClass","ReactElement","iframe","createFactory","ReactDOMIframe","createClass","displayName","tagName","mixins","render","props","componentDidMount","trapBubbledEvent","topLevelTypes","topLoad","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactDOMIframe.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC1D,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACxE,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAc,CAAC;AACxC,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIK,MAAM,GAAGD,YAAY,CAACE,aAAa,CAAC,QAAQ,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAGJ,UAAU,CAACK,WAAW,CAAC;EAC1CC,WAAW,EAAE,gBAAgB;EAC7BC,OAAO,EAAE,QAAQ;EAEjBC,MAAM,EAAE,CAACT,0BAA0B,EAAED,mBAAmB,CAAC;EAEzDW,MAAM,EAAE,SAAAA,CAAA,EAAW;IACjB,OAAOP,MAAM,CAAC,IAAI,CAACQ,KAAK,CAAC;EAC3B,CAAC;EAEDC,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC5B,IAAI,CAACC,gBAAgB,CAAChB,cAAc,CAACiB,aAAa,CAACC,OAAO,EAAE,MAAM,CAAC;EACrE;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * @internal\n */\nexport class BrowserWebSocketTransport {\n  static create(url) {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url);\n      ws.addEventListener('open', () => {\n        return resolve(new BrowserWebSocketTransport(ws));\n      });\n      ws.addEventListener('error', reject);\n    });\n  }\n  #ws;\n  onmessage;\n  onclose;\n  constructor(ws) {\n    this.#ws = ws;\n    this.#ws.addEventListener('message', event => {\n      if (this.onmessage) {\n        this.onmessage.call(null, event.data);\n      }\n    });\n    this.#ws.addEventListener('close', () => {\n      if (this.onclose) {\n        this.onclose.call(null);\n      }\n    });\n    // Silently ignore all errors - we don't know what to do with them.\n    this.#ws.addEventListener('error', () => {});\n  }\n  send(message) {\n    this.#ws.send(message);\n  }\n  close() {\n    this.#ws.close();\n  }\n}","map":{"version":3,"names":["BrowserWebSocketTransport","create","url","Promise","resolve","reject","ws","WebSocket","addEventListener","onmessage","onclose","constructor","event","call","data","send","message","close"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\common\\BrowserWebSocketTransport.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type {ConnectionTransport} from './ConnectionTransport.js';\n\n/**\n * @internal\n */\nexport class BrowserWebSocketTransport implements ConnectionTransport {\n  static create(url: string): Promise<BrowserWebSocketTransport> {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url);\n\n      ws.addEventListener('open', () => {\n        return resolve(new BrowserWebSocketTransport(ws));\n      });\n      ws.addEventListener('error', reject);\n    });\n  }\n\n  #ws: WebSocket;\n  onmessage?: (message: string) => void;\n  onclose?: () => void;\n\n  constructor(ws: WebSocket) {\n    this.#ws = ws;\n    this.#ws.addEventListener('message', event => {\n      if (this.onmessage) {\n        this.onmessage.call(null, event.data);\n      }\n    });\n    this.#ws.addEventListener('close', () => {\n      if (this.onclose) {\n        this.onclose.call(null);\n      }\n    });\n    // Silently ignore all errors - we don't know what to do with them.\n    this.#ws.addEventListener('error', () => {});\n  }\n\n  send(message: string): void {\n    this.#ws.send(message);\n  }\n\n  close(): void {\n    this.#ws.close();\n  }\n}\n"],"mappings":"AAOA;;;AAGA,OAAM,MAAOA,yBAAyB;EACpC,OAAOC,MAAMA,CAACC,GAAW;IACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAACL,GAAG,CAAC;MAE7BI,EAAE,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAK;QAC/B,OAAOJ,OAAO,CAAC,IAAIJ,yBAAyB,CAACM,EAAE,CAAC,CAAC;MACnD,CAAC,CAAC;MACFA,EAAE,CAACE,gBAAgB,CAAC,OAAO,EAAEH,MAAM,CAAC;IACtC,CAAC,CAAC;EACJ;EAEA,CAAAC,EAAG;EACHG,SAAS;EACTC,OAAO;EAEPC,YAAYL,EAAa;IACvB,IAAI,CAAC,CAAAA,EAAG,GAAGA,EAAE;IACb,IAAI,CAAC,CAAAA,EAAG,CAACE,gBAAgB,CAAC,SAAS,EAAEI,KAAK,IAAG;MAC3C,IAAI,IAAI,CAACH,SAAS,EAAE;QAClB,IAAI,CAACA,SAAS,CAACI,IAAI,CAAC,IAAI,EAAED,KAAK,CAACE,IAAI,CAAC;MACvC;IACF,CAAC,CAAC;IACF,IAAI,CAAC,CAAAR,EAAG,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAK;MACtC,IAAI,IAAI,CAACE,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAACG,IAAI,CAAC,IAAI,CAAC;MACzB;IACF,CAAC,CAAC;IACF;IACA,IAAI,CAAC,CAAAP,EAAG,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAK,CAAE,CAAC,CAAC;EAC9C;EAEAO,IAAIA,CAACC,OAAe;IAClB,IAAI,CAAC,CAAAV,EAAG,CAACS,IAAI,CAACC,OAAO,CAAC;EACxB;EAEAC,KAAKA,CAAA;IACH,IAAI,CAAC,CAAAX,EAAG,CAACW,KAAK,EAAE;EAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
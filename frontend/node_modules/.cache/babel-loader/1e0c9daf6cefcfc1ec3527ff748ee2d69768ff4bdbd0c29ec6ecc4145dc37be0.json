{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function () {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function (target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n  registerDefault: function () {}\n};\nmodule.exports = EventListener;","map":{"version":3,"names":["emptyFunction","require","EventListener","listen","target","eventType","callback","addEventListener","remove","removeEventListener","attachEvent","detachEvent","capture","process","env","NODE_ENV","console","error","registerDefault","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/EventListener.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,SAAAA,CAASC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IAC5C,IAAIF,MAAM,CAACG,gBAAgB,EAAE;MAC3BH,MAAM,CAACG,gBAAgB,CAACF,SAAS,EAAEC,QAAQ,EAAE,KAAK,CAAC;MACnD,OAAO;QACLE,MAAM,EAAE,SAAAA,CAAA,EAAW;UACjBJ,MAAM,CAACK,mBAAmB,CAACJ,SAAS,EAAEC,QAAQ,EAAE,KAAK,CAAC;QACxD;MACF,CAAC;IACH,CAAC,MAAM,IAAIF,MAAM,CAACM,WAAW,EAAE;MAC7BN,MAAM,CAACM,WAAW,CAAC,IAAI,GAAGL,SAAS,EAAEC,QAAQ,CAAC;MAC9C,OAAO;QACLE,MAAM,EAAE,SAAAA,CAAA,EAAW;UACjBJ,MAAM,CAACO,WAAW,CAAC,IAAI,GAAGN,SAAS,EAAEC,QAAQ,CAAC;QAChD;MACF,CAAC;IACH;EACF,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,OAAO,EAAE,SAAAA,CAASR,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IAC7C,IAAI,CAACF,MAAM,CAACG,gBAAgB,EAAE;MAC5B,IAAI,YAAY,KAAKM,OAAO,CAACC,GAAG,CAACC,QAAQ,EAAE;QACzCC,OAAO,CAACC,KAAK,CACX,8DAA8D,GAC9D,oEAAoE,GACpE,+BACF,CAAC;MACH;MACA,OAAO;QACLT,MAAM,EAAER;MACV,CAAC;IACH,CAAC,MAAM;MACLI,MAAM,CAACG,gBAAgB,CAACF,SAAS,EAAEC,QAAQ,EAAE,IAAI,CAAC;MAClD,OAAO;QACLE,MAAM,EAAE,SAAAA,CAAA,EAAW;UACjBJ,MAAM,CAACK,mBAAmB,CAACJ,SAAS,EAAEC,QAAQ,EAAE,IAAI,CAAC;QACvD;MACF,CAAC;IACH;EACF,CAAC;EAEDY,eAAe,EAAE,SAAAA,CAAA,EAAW,CAAC;AAC/B,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGlB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
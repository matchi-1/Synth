{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({\n      onMouseEnter: null\n    }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({\n      onMouseLeave: null\n    }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\nvar extractedEvents = [null, null];\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n    return extractedEvents;\n  }\n};\nmodule.exports = EnterLeaveEventPlugin;","map":{"version":3,"names":["EventConstants","require","EventPropagators","SyntheticMouseEvent","ReactMount","keyOf","topLevelTypes","getFirstReactDOM","eventTypes","mouseEnter","registrationName","onMouseEnter","dependencies","topMouseOut","topMouseOver","mouseLeave","onMouseLeave","extractedEvents","EnterLeaveEventPlugin","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","nativeEvent","relatedTarget","fromElement","win","window","doc","ownerDocument","defaultView","parentWindow","from","to","toElement","fromID","getID","toID","leave","getPooled","type","target","enter","accumulateEnterLeaveDispatches","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/EnterLeaveEventPlugin.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
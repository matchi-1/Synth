{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nexport class SecurityDetails {\n  #subjectName;\n  #issuer;\n  #validFrom;\n  #validTo;\n  #protocol;\n  #sanList;\n  /**\n   * @internal\n   */\n  constructor(securityPayload) {\n    this.#subjectName = securityPayload.subjectName;\n    this.#issuer = securityPayload.issuer;\n    this.#validFrom = securityPayload.validFrom;\n    this.#validTo = securityPayload.validTo;\n    this.#protocol = securityPayload.protocol;\n    this.#sanList = securityPayload.sanList;\n  }\n  /**\n   * The name of the issuer of the certificate.\n   */\n  issuer() {\n    return this.#issuer;\n  }\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n  validFrom() {\n    return this.#validFrom;\n  }\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n  validTo() {\n    return this.#validTo;\n  }\n  /**\n   * The security protocol being used, e.g. \"TLS 1.2\".\n   */\n  protocol() {\n    return this.#protocol;\n  }\n  /**\n   * The name of the subject to which the certificate was issued.\n   */\n  subjectName() {\n    return this.#subjectName;\n  }\n  /**\n   * The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n  subjectAlternativeNames() {\n    return this.#sanList;\n  }\n}","map":{"version":3,"names":["SecurityDetails","subjectName","issuer","validFrom","validTo","protocol","sanList","constructor","securityPayload","subjectAlternativeNames"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer-core\\src\\common\\SecurityDetails.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nexport class SecurityDetails {\n  #subjectName: string;\n  #issuer: string;\n  #validFrom: number;\n  #validTo: number;\n  #protocol: string;\n  #sanList: string[];\n\n  /**\n   * @internal\n   */\n  constructor(securityPayload: Protocol.Network.SecurityDetails) {\n    this.#subjectName = securityPayload.subjectName;\n    this.#issuer = securityPayload.issuer;\n    this.#validFrom = securityPayload.validFrom;\n    this.#validTo = securityPayload.validTo;\n    this.#protocol = securityPayload.protocol;\n    this.#sanList = securityPayload.sanList;\n  }\n\n  /**\n   * The name of the issuer of the certificate.\n   */\n  issuer(): string {\n    return this.#issuer;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n  validFrom(): number {\n    return this.#validFrom;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n  validTo(): number {\n    return this.#validTo;\n  }\n\n  /**\n   * The security protocol being used, e.g. \"TLS 1.2\".\n   */\n  protocol(): string {\n    return this.#protocol;\n  }\n\n  /**\n   * The name of the subject to which the certificate was issued.\n   */\n  subjectName(): string {\n    return this.#subjectName;\n  }\n\n  /**\n   * The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n  subjectAlternativeNames(): string[] {\n    return this.#sanList;\n  }\n}\n"],"mappings":"AAAA;;;;;AAQA;;;;;;AAMA,OAAM,MAAOA,eAAe;EAC1B,CAAAC,WAAY;EACZ,CAAAC,MAAO;EACP,CAAAC,SAAU;EACV,CAAAC,OAAQ;EACR,CAAAC,QAAS;EACT,CAAAC,OAAQ;EAER;;;EAGAC,YAAYC,eAAiD;IAC3D,IAAI,CAAC,CAAAP,WAAY,GAAGO,eAAe,CAACP,WAAW;IAC/C,IAAI,CAAC,CAAAC,MAAO,GAAGM,eAAe,CAACN,MAAM;IACrC,IAAI,CAAC,CAAAC,SAAU,GAAGK,eAAe,CAACL,SAAS;IAC3C,IAAI,CAAC,CAAAC,OAAQ,GAAGI,eAAe,CAACJ,OAAO;IACvC,IAAI,CAAC,CAAAC,QAAS,GAAGG,eAAe,CAACH,QAAQ;IACzC,IAAI,CAAC,CAAAC,OAAQ,GAAGE,eAAe,CAACF,OAAO;EACzC;EAEA;;;EAGAJ,MAAMA,CAAA;IACJ,OAAO,IAAI,CAAC,CAAAA,MAAO;EACrB;EAEA;;;;EAIAC,SAASA,CAAA;IACP,OAAO,IAAI,CAAC,CAAAA,SAAU;EACxB;EAEA;;;;EAIAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC,CAAAA,OAAQ;EACtB;EAEA;;;EAGAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC,CAAAA,QAAS;EACvB;EAEA;;;EAGAJ,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC,CAAAA,WAAY;EAC1B;EAEA;;;EAGAQ,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAAC,CAAAH,OAAQ;EACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
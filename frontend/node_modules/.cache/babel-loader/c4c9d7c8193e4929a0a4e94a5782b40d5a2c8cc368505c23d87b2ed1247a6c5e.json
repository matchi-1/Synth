{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getExtensionDescription = exports.ExplorerBase = void 0;\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst os_1 = __importDefault(require(\"os\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst util_js_1 = require(\"./util.js\");\n/**\n * @internal\n */\nclass ExplorerBase {\n  #loadingMetaConfig = false;\n  config;\n  loadCache;\n  searchCache;\n  constructor(options) {\n    this.config = options;\n    if (options.cache) {\n      this.loadCache = new Map();\n      this.searchCache = new Map();\n    }\n    this.#validateConfig();\n  }\n  set loadingMetaConfig(value) {\n    this.#loadingMetaConfig = value;\n  }\n  #validateConfig() {\n    const config = this.config;\n    for (const place of config.searchPlaces) {\n      const extension = path_1.default.extname(place);\n      const loader = this.config.loaders[extension || 'noExt'] ?? this.config.loaders['default'];\n      if (loader === undefined) {\n        throw new Error(`Missing loader for ${getExtensionDescription(place)}.`);\n      }\n      if (typeof loader !== 'function') {\n        throw new Error(`Loader for ${getExtensionDescription(place)} is not a function: Received ${typeof loader}.`);\n      }\n    }\n  }\n  clearLoadCache() {\n    if (this.loadCache) {\n      this.loadCache.clear();\n    }\n  }\n  clearSearchCache() {\n    if (this.searchCache) {\n      this.searchCache.clear();\n    }\n  }\n  clearCaches() {\n    this.clearLoadCache();\n    this.clearSearchCache();\n  }\n  toCosmiconfigResult(filepath, config) {\n    if (config === null) {\n      return null;\n    }\n    if (config === undefined) {\n      return {\n        filepath,\n        config: undefined,\n        isEmpty: true\n      };\n    }\n    if (this.config.applyPackagePropertyPathToConfiguration || this.#loadingMetaConfig) {\n      const packageProp = this.config.packageProp ?? this.config.moduleName;\n      config = (0, util_js_1.getPropertyByPath)(config, packageProp);\n    }\n    if (config === undefined) {\n      return {\n        filepath,\n        config: undefined,\n        isEmpty: true\n      };\n    }\n    return {\n      config,\n      filepath\n    };\n  }\n  validateImports(containingFilePath, imports, importStack) {\n    const fileDirectory = path_1.default.dirname(containingFilePath);\n    for (const importPath of imports) {\n      if (typeof importPath !== 'string') {\n        throw new Error(`${containingFilePath}: Key $import must contain a string or a list of strings`);\n      }\n      const fullPath = path_1.default.resolve(fileDirectory, importPath);\n      if (fullPath === containingFilePath) {\n        throw new Error(`Self-import detected in ${containingFilePath}`);\n      }\n      const idx = importStack.indexOf(fullPath);\n      if (idx !== -1) {\n        throw new Error(`Circular import detected:\n${[...importStack, fullPath].map((path, i) => `${i + 1}. ${path}`).join('\\n')} (same as ${idx + 1}.)`);\n      }\n    }\n  }\n  getSearchPlacesForDir(dir, globalConfigPlaces) {\n    return (dir.isGlobalConfig ? globalConfigPlaces : this.config.searchPlaces).map(place => path_1.default.join(dir.path, place));\n  }\n  getGlobalConfigDir() {\n    return (0, env_paths_1.default)(this.config.moduleName, {\n      suffix: ''\n    }).config;\n  }\n  *getGlobalDirs(startDir) {\n    const stopDir = path_1.default.resolve(this.config.stopDir ?? os_1.default.homedir());\n    yield {\n      path: startDir,\n      isGlobalConfig: false\n    };\n    let currentDir = startDir;\n    while (currentDir !== stopDir) {\n      const parentDir = path_1.default.dirname(currentDir);\n      /* istanbul ignore if -- @preserve */\n      if (parentDir === currentDir) {\n        // we're probably at the root of the directory structure\n        break;\n      }\n      yield {\n        path: parentDir,\n        isGlobalConfig: false\n      };\n      currentDir = parentDir;\n    }\n    yield {\n      path: this.getGlobalConfigDir(),\n      isGlobalConfig: true\n    };\n  }\n}\nexports.ExplorerBase = ExplorerBase;\n/**\n * @internal\n */\nfunction getExtensionDescription(extension) {\n  /* istanbul ignore next -- @preserve */\n  return extension ? `extension \"${extension}\"` : 'files without extensions';\n}\nexports.getExtensionDescription = getExtensionDescription;","map":{"version":3,"names":["env_paths_1","__importDefault","require","os_1","path_1","util_js_1","ExplorerBase","loadingMetaConfig","config","loadCache","searchCache","constructor","options","cache","Map","validateConfig","value","#validateConfig","place","searchPlaces","extension","default","extname","loader","loaders","undefined","Error","getExtensionDescription","clearLoadCache","clear","clearSearchCache","clearCaches","toCosmiconfigResult","filepath","isEmpty","applyPackagePropertyPathToConfiguration","packageProp","moduleName","getPropertyByPath","validateImports","containingFilePath","imports","importStack","fileDirectory","dirname","importPath","fullPath","resolve","idx","indexOf","map","path","i","join","getSearchPlacesForDir","dir","globalConfigPlaces","isGlobalConfig","getGlobalConfigDir","suffix","getGlobalDirs","startDir","stopDir","homedir","currentDir","parentDir","exports"],"sources":["../src/ExplorerBase.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
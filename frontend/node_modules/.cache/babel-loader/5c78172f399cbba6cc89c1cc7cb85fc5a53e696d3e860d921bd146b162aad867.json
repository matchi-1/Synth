{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n  close: emptyFunction\n};\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function () {\n    this.putListenerQueue.reset();\n  },\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, ON_DOM_READY_QUEUEING];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n  getPutListenerQueue: function () {\n    return this.putListenerQueue;\n  },\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\nmodule.exports = ReactServerRenderingTransaction;","map":{"version":3,"names":["PooledClass","require","CallbackQueue","ReactPutListenerQueue","Transaction","assign","emptyFunction","ON_DOM_READY_QUEUEING","initialize","reactMountReady","reset","close","PUT_LISTENER_QUEUEING","putListenerQueue","TRANSACTION_WRAPPERS","ReactServerRenderingTransaction","renderToStaticMarkup","reinitializeTransaction","getPooled","Mixin","getTransactionWrappers","getReactMountReady","getPutListenerQueue","destructor","release","prototype","addPoolingTo","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactServerRenderingTransaction.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIG,WAAW,GAAGH,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAII,MAAM,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;AACA;AACA,IAAIM,qBAAqB,GAAG;EAC1B;AACF;AACA;EACEC,UAAU,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAI,CAACC,eAAe,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;EAEDC,KAAK,EAAEL;AACT,CAAC;AAED,IAAIM,qBAAqB,GAAG;EAC1BJ,UAAU,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAI,CAACK,gBAAgB,CAACH,KAAK,CAAC,CAAC;EAC/B,CAAC;EAEDC,KAAK,EAAEL;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAIQ,oBAAoB,GAAG,CACzBF,qBAAqB,EACrBL,qBAAqB,CACtB;;AAED;AACA;AACA;AACA;AACA,SAASQ,+BAA+BA,CAACC,oBAAoB,EAAE;EAC7D,IAAI,CAACC,uBAAuB,CAAC,CAAC;EAC9B,IAAI,CAACD,oBAAoB,GAAGA,oBAAoB;EAChD,IAAI,CAACP,eAAe,GAAGP,aAAa,CAACgB,SAAS,CAAC,IAAI,CAAC;EACpD,IAAI,CAACL,gBAAgB,GAAGV,qBAAqB,CAACe,SAAS,CAAC,CAAC;AAC3D;AAEA,IAAIC,KAAK,GAAG;EACV;AACF;AACA;AACA;AACA;AACA;EACEC,sBAAsB,EAAE,SAAAA,CAAA,EAAW;IACjC,OAAON,oBAAoB;EAC7B,CAAC;EAED;AACF;AACA;EACEO,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC7B,OAAO,IAAI,CAACZ,eAAe;EAC7B,CAAC;EAEDa,mBAAmB,EAAE,SAAAA,CAAA,EAAW;IAC9B,OAAO,IAAI,CAACT,gBAAgB;EAC9B,CAAC;EAED;AACF;AACA;AACA;EACEU,UAAU,EAAE,SAAAA,CAAA,EAAW;IACrBrB,aAAa,CAACsB,OAAO,CAAC,IAAI,CAACf,eAAe,CAAC;IAC3C,IAAI,CAACA,eAAe,GAAG,IAAI;IAE3BN,qBAAqB,CAACqB,OAAO,CAAC,IAAI,CAACX,gBAAgB,CAAC;IACpD,IAAI,CAACA,gBAAgB,GAAG,IAAI;EAC9B;AACF,CAAC;AAGDR,MAAM,CACJU,+BAA+B,CAACU,SAAS,EACzCrB,WAAW,CAACe,KAAK,EACjBA,KACF,CAAC;AAEDnB,WAAW,CAAC0B,YAAY,CAACX,+BAA+B,CAAC;AAEzDY,MAAM,CAACC,OAAO,GAAGb,+BAA+B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
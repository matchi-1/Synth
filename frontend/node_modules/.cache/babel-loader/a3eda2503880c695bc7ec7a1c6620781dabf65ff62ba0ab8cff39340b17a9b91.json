{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\nvar svgWrap = [1, '<svg>', '</svg>'];\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'optgroup': selectWrap,\n  'option': selectWrap,\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n  'td': trWrap,\n  'th': trWrap,\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  \"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode);\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\nmodule.exports = getMarkupWrap;","map":{"version":3,"names":["ExecutionEnvironment","require","invariant","dummyNode","canUseDOM","document","createElement","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","markupWrap","getMarkupWrap","nodeName","process","env","NODE_ENV","hasOwnProperty","innerHTML","firstChild","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/getMarkupWrap.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
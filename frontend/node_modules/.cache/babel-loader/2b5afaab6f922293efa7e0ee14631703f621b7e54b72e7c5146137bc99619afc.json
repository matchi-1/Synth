{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport { cosmiconfigSync } from 'cosmiconfig';\nfunction getBooleanEnvVar(name) {\n  const env = process.env[name];\n  if (env === undefined) {\n    return;\n  }\n  switch (env.toLowerCase()) {\n    case '':\n    case '0':\n    case 'false':\n    case 'off':\n      return false;\n    default:\n      return true;\n  }\n}\n/**\n * @internal\n */\nfunction isSupportedBrowser(product) {\n  switch (product) {\n    case 'chrome':\n    case 'firefox':\n      return true;\n    default:\n      return false;\n  }\n}\n/**\n * @internal\n */\nfunction getDefaultBrowser(browser) {\n  // Validate configuration.\n  if (browser && !isSupportedBrowser(browser)) {\n    throw new Error(`Unsupported browser ${browser}`);\n  }\n  switch (browser) {\n    case 'firefox':\n      return 'firefox';\n    default:\n      return 'chrome';\n  }\n}\n/**\n * @internal\n */\nfunction getLogLevel(logLevel) {\n  switch (logLevel) {\n    case 'silent':\n      return 'silent';\n    case 'error':\n      return 'error';\n    default:\n      return 'warn';\n  }\n}\nfunction getBrowserSetting(browser, configuration, defaultConfig = {}) {\n  if (configuration.skipDownload) {\n    return {\n      skipDownload: true\n    };\n  }\n  const browserSetting = {};\n  const browserEnvName = browser.replaceAll('-', '_').toUpperCase();\n  browserSetting.version = process.env[`PUPPETEER_${browserEnvName}_VERSION`] ?? configuration[browser]?.version ?? defaultConfig.version;\n  browserSetting.downloadBaseUrl = process.env[`PUPPETEER_${browserEnvName}_DOWNLOAD_BASE_URL`] ?? configuration[browser]?.downloadBaseUrl ?? defaultConfig.downloadBaseUrl;\n  browserSetting.skipDownload = getBooleanEnvVar(`PUPPETEER_${browserEnvName}_SKIP_DOWNLOAD`) ?? getBooleanEnvVar(`PUPPETEER_SKIP_${browserEnvName}_DOWNLOAD`) ?? configuration[browser]?.skipDownload ?? defaultConfig.skipDownload;\n  return browserSetting;\n}\n/**\n * @internal\n */\nexport const getConfiguration = () => {\n  const result = cosmiconfigSync('puppeteer', {\n    searchStrategy: 'global'\n  }).search();\n  const configuration = result ? result.config : {};\n  configuration.logLevel = getLogLevel(process.env['PUPPETEER_LOGLEVEL'] ?? configuration.logLevel);\n  // Merging environment variables.\n  configuration.defaultBrowser = getDefaultBrowser(process.env['PUPPETEER_BROWSER'] ?? configuration.defaultBrowser);\n  configuration.executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'] ?? configuration.executablePath;\n  // Default to skipDownload if executablePath is set\n  if (configuration.executablePath) {\n    configuration.skipDownload = true;\n  }\n  // Set skipDownload explicitly or from default\n  configuration.skipDownload = getBooleanEnvVar('PUPPETEER_SKIP_DOWNLOAD') ?? configuration.skipDownload;\n  // Prepare variables used in browser downloading\n  configuration.chrome = getBrowserSetting('chrome', configuration);\n  configuration['chrome-headless-shell'] = getBrowserSetting('chrome-headless-shell', configuration);\n  configuration.firefox = getBrowserSetting('firefox', configuration, {\n    skipDownload: true\n  });\n  configuration.cacheDirectory = process.env['PUPPETEER_CACHE_DIR'] ?? configuration.cacheDirectory ?? join(homedir(), '.cache', 'puppeteer');\n  configuration.temporaryDirectory = process.env['PUPPETEER_TMP_DIR'] ?? configuration.temporaryDirectory;\n  configuration.experiments ??= {};\n  return configuration;\n};","map":{"version":3,"names":["homedir","join","cosmiconfigSync","getBooleanEnvVar","name","env","process","undefined","toLowerCase","isSupportedBrowser","product","getDefaultBrowser","browser","Error","getLogLevel","logLevel","getBrowserSetting","configuration","defaultConfig","skipDownload","browserSetting","browserEnvName","replaceAll","toUpperCase","version","downloadBaseUrl","getConfiguration","result","searchStrategy","search","config","defaultBrowser","executablePath","chrome","firefox","cacheDirectory","temporaryDirectory","experiments"],"sources":["C:\\Users\\raffy\\Desktop\\test\\node_modules\\puppeteer\\src\\getConfiguration.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {homedir} from 'os';\nimport {join} from 'path';\n\nimport {cosmiconfigSync} from 'cosmiconfig';\nimport type {\n  ChromeHeadlessShellSettings,\n  ChromeSettings,\n  Configuration,\n  FirefoxSettings,\n  SupportedBrowser,\n} from 'puppeteer-core';\n\nfunction getBooleanEnvVar(name: string): boolean | undefined {\n  const env = process.env[name];\n  if (env === undefined) {\n    return;\n  }\n  switch (env.toLowerCase()) {\n    case '':\n    case '0':\n    case 'false':\n    case 'off':\n      return false;\n    default:\n      return true;\n  }\n}\n\n/**\n * @internal\n */\nfunction isSupportedBrowser(product: unknown): product is SupportedBrowser {\n  switch (product) {\n    case 'chrome':\n    case 'firefox':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * @internal\n */\nfunction getDefaultBrowser(browser: unknown): SupportedBrowser {\n  // Validate configuration.\n  if (browser && !isSupportedBrowser(browser)) {\n    throw new Error(`Unsupported browser ${browser}`);\n  }\n  switch (browser) {\n    case 'firefox':\n      return 'firefox';\n    default:\n      return 'chrome';\n  }\n}\n\n/**\n * @internal\n */\nfunction getLogLevel(logLevel: unknown): 'silent' | 'error' | 'warn' {\n  switch (logLevel) {\n    case 'silent':\n      return 'silent';\n    case 'error':\n      return 'error';\n    default:\n      return 'warn';\n  }\n}\n\nfunction getBrowserSetting(\n  browser: 'chrome' | 'chrome-headless-shell' | 'firefox',\n  configuration: Configuration,\n  defaultConfig:\n    | ChromeSettings\n    | ChromeHeadlessShellSettings\n    | FirefoxSettings = {}\n): ChromeSettings | ChromeHeadlessShellSettings | FirefoxSettings {\n  if (configuration.skipDownload) {\n    return {\n      skipDownload: true,\n    };\n  }\n  const browserSetting:\n    | ChromeSettings\n    | ChromeHeadlessShellSettings\n    | FirefoxSettings = {};\n  const browserEnvName = browser.replaceAll('-', '_').toUpperCase();\n\n  browserSetting.version =\n    process.env[`PUPPETEER_${browserEnvName}_VERSION`] ??\n    configuration[browser]?.version ??\n    defaultConfig.version;\n  browserSetting.downloadBaseUrl =\n    process.env[`PUPPETEER_${browserEnvName}_DOWNLOAD_BASE_URL`] ??\n    configuration[browser]?.downloadBaseUrl ??\n    defaultConfig.downloadBaseUrl;\n\n  browserSetting.skipDownload =\n    getBooleanEnvVar(`PUPPETEER_${browserEnvName}_SKIP_DOWNLOAD`) ??\n    getBooleanEnvVar(`PUPPETEER_SKIP_${browserEnvName}_DOWNLOAD`) ??\n    configuration[browser]?.skipDownload ??\n    defaultConfig.skipDownload;\n\n  return browserSetting;\n}\n\n/**\n * @internal\n */\nexport const getConfiguration = (): Configuration => {\n  const result = cosmiconfigSync('puppeteer', {\n    searchStrategy: 'global',\n  }).search();\n  const configuration: Configuration = result ? result.config : {};\n\n  configuration.logLevel = getLogLevel(\n    process.env['PUPPETEER_LOGLEVEL'] ?? configuration.logLevel\n  );\n\n  // Merging environment variables.\n  configuration.defaultBrowser = getDefaultBrowser(\n    process.env['PUPPETEER_BROWSER'] ?? configuration.defaultBrowser\n  );\n\n  configuration.executablePath =\n    process.env['PUPPETEER_EXECUTABLE_PATH'] ?? configuration.executablePath;\n\n  // Default to skipDownload if executablePath is set\n  if (configuration.executablePath) {\n    configuration.skipDownload = true;\n  }\n\n  // Set skipDownload explicitly or from default\n  configuration.skipDownload =\n    getBooleanEnvVar('PUPPETEER_SKIP_DOWNLOAD') ?? configuration.skipDownload;\n\n  // Prepare variables used in browser downloading\n  configuration.chrome = getBrowserSetting('chrome', configuration);\n  configuration['chrome-headless-shell'] = getBrowserSetting(\n    'chrome-headless-shell',\n    configuration\n  );\n  configuration.firefox = getBrowserSetting('firefox', configuration, {\n    skipDownload: true,\n  });\n\n  configuration.cacheDirectory =\n    process.env['PUPPETEER_CACHE_DIR'] ??\n    configuration.cacheDirectory ??\n    join(homedir(), '.cache', 'puppeteer');\n\n  configuration.temporaryDirectory =\n    process.env['PUPPETEER_TMP_DIR'] ?? configuration.temporaryDirectory;\n\n  configuration.experiments ??= {};\n\n  return configuration;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
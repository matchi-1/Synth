{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar warning = require(\"./warning\");\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n  mixins: [ReactBrowserComponentMixin],\n  componentWillMount: function () {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? warning(this.props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : null;\n    }\n  },\n  render: function () {\n    return option(this.props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMOption;","map":{"version":3,"names":["ReactBrowserComponentMixin","require","ReactClass","ReactElement","warning","option","createFactory","ReactDOMOption","createClass","displayName","tagName","mixins","componentWillMount","process","env","NODE_ENV","props","selected","render","children","module","exports"],"sources":["C:/Users/raffy/Desktop/test/Synth/Synth/node_modules/react-embedded-browser/node_modules/react/lib/ReactDOMOption.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACxE,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;AAElC,IAAII,MAAM,GAAGF,YAAY,CAACG,aAAa,CAAC,QAAQ,CAAC;;AAEjD;AACA;AACA;AACA,IAAIC,cAAc,GAAGL,UAAU,CAACM,WAAW,CAAC;EAC1CC,WAAW,EAAE,gBAAgB;EAC7BC,OAAO,EAAE,QAAQ;EAEjBC,MAAM,EAAE,CAACX,0BAA0B,CAAC;EAEpCY,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC7B;IACA,IAAI,YAAY,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,EAAE;MACxC,YAAY,KAAKF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGX,OAAO,CAC9C,IAAI,CAACY,KAAK,CAACC,QAAQ,IAAI,IAAI,EAC3B,iEAAiE,GACjE,iCACF,CAAC,GAAG,IAAI;IACV;EACF,CAAC;EAEDC,MAAM,EAAE,SAAAA,CAAA,EAAW;IACjB,OAAOb,MAAM,CAAC,IAAI,CAACW,KAAK,EAAE,IAAI,CAACA,KAAK,CAACG,QAAQ,CAAC;EAChD;AAEF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}